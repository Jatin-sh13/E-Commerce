[{"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Cart.js":"1","E:\\REACT COURSE\\ecommerce\\client\\src\\index.js":"2","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Header.js":"3","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\UserProfile.js":"4","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\PlaceOrderScreen.js":"5","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\PaymentScreen.js":"6","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Loginscreen.js":"7","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\ShippingScreen.js":"8","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Registerscreen.js":"9","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Login.js":"10","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Product.js":"11","E:\\REACT COURSE\\ecommerce\\client\\src\\types.js":"12","E:\\REACT COURSE\\ecommerce\\client\\src\\Store.js":"13","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Login.js":"14","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Order.js":"15","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Order.js":"16","E:\\REACT COURSE\\ecommerce\\client\\src\\App.js":"17","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Cartscreen.js":"18","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Productscreen.js":"19","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Product.js":"20","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Product.js":"21","E:\\REACT COURSE\\ecommerce\\client\\src\\setToken.js":"22","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Footer.js":"23","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Register.js":"24","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\FormContainer.js":"25","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Homescreen.js":"26","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Orderdetail.js":"27","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Cart.js":"28","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Orderscreen.js":"29","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\OrderPay.js":"30","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\OrderPay.js":"31","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Orderdetails.js":"32","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Message.js":"33","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Rating.js":"34","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\OrderList.js":"35","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\OrderList.js":"36","E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Loader.js":"37","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Adminlogin.js":"38","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\UploadProduct.js":"39"},{"size":1368,"mtime":1607795238284,"results":"40","hashOfConfig":"41"},{"size":301,"mtime":1606676051839,"results":"42","hashOfConfig":"41"},{"size":1953,"mtime":1608394182376,"results":"43","hashOfConfig":"41"},{"size":3633,"mtime":1608369948346,"results":"44","hashOfConfig":"41"},{"size":4961,"mtime":1608035249737,"results":"45","hashOfConfig":"41"},{"size":1585,"mtime":1607796611680,"results":"46","hashOfConfig":"41"},{"size":1959,"mtime":1607762785701,"results":"47","hashOfConfig":"41"},{"size":3120,"mtime":1607777395752,"results":"48","hashOfConfig":"41"},{"size":2682,"mtime":1607679266491,"results":"49","hashOfConfig":"41"},{"size":1335,"mtime":1607165784297,"results":"50","hashOfConfig":"41"},{"size":927,"mtime":1606643714383,"results":"51","hashOfConfig":"41"},{"size":1177,"mtime":1608367544977,"results":"52","hashOfConfig":"41"},{"size":1514,"mtime":1608368177253,"results":"53","hashOfConfig":"41"},{"size":1193,"mtime":1607687515124,"results":"54","hashOfConfig":"41"},{"size":689,"mtime":1608194881421,"results":"55","hashOfConfig":"41"},{"size":639,"mtime":1607942638431,"results":"56","hashOfConfig":"41"},{"size":2122,"mtime":1608393257873,"results":"57","hashOfConfig":"41"},{"size":4813,"mtime":1608040943574,"results":"58","hashOfConfig":"41"},{"size":3426,"mtime":1608039943454,"results":"59","hashOfConfig":"41"},{"size":866,"mtime":1606737351612,"results":"60","hashOfConfig":"41"},{"size":789,"mtime":1606736240660,"results":"61","hashOfConfig":"41"},{"size":257,"mtime":1607094024281,"results":"62","hashOfConfig":"41"},{"size":160,"mtime":1606474923471,"results":"63","hashOfConfig":"41"},{"size":2067,"mtime":1607714228628,"results":"64","hashOfConfig":"41"},{"size":395,"mtime":1607769499574,"results":"65","hashOfConfig":"41"},{"size":1091,"mtime":1607165475318,"results":"66","hashOfConfig":"41"},{"size":750,"mtime":1608108527979,"results":"67","hashOfConfig":"41"},{"size":1301,"mtime":1607795020480,"results":"68","hashOfConfig":"41"},{"size":5957,"mtime":1608316904195,"results":"69","hashOfConfig":"41"},{"size":651,"mtime":1608194932025,"results":"70","hashOfConfig":"41"},{"size":598,"mtime":1608195347747,"results":"71","hashOfConfig":"41"},{"size":447,"mtime":1608058565217,"results":"72","hashOfConfig":"41"},{"size":282,"mtime":1606723602500,"results":"73","hashOfConfig":"41"},{"size":1124,"mtime":1606496504812,"results":"74","hashOfConfig":"41"},{"size":679,"mtime":1608368067355,"results":"75","hashOfConfig":"41"},{"size":455,"mtime":1608368373955,"results":"76","hashOfConfig":"41"},{"size":536,"mtime":1606722825719,"results":"77","hashOfConfig":"41"},{"size":1998,"mtime":1608393643789,"results":"78","hashOfConfig":"41"},{"size":184,"mtime":1608392993842,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"va4swu",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"139"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Cart.js",["181"],"import { Addcart_fail, Addcart_sucess, Remove_cart, Save_PaymentMethod, Shipping_Add_Sucess } from '../types'\r\nexport const CartReducer = (state = { cartItems: [], shippingAddress: {}, PaymentMethod: '' }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case Addcart_sucess:\r\n            const item = payload\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            }\r\n        case Remove_cart:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case Shipping_Add_Sucess:\r\n            return {\r\n                ...state,\r\n                shippingAddress: payload\r\n            }\r\n        case Save_PaymentMethod:\r\n            return {\r\n                ...state,\r\n                PaymentMethod: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}",["182","183"],"E:\\REACT COURSE\\ecommerce\\client\\src\\index.js",[],["184","185"],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Header.js",["186"],"import React from 'react'\r\nimport { Nav, Navbar, Container, NavDropdown, DropdownItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../Action/Login'\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userInfo = useSelector(state => state.user)\r\n    const { user, token } = userInfo\r\n    const Logouthandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link href=\"/cart\">\r\n                                    <i class=\"fas fa-shopping-cart\"></i>\r\n                                    Cart</Nav.Link>\r\n                                {user && token !== null ? <NavDropdown title={user.name}>\r\n                                    <NavDropdown.Item>\r\n                                        Profile\r\n                                    </NavDropdown.Item>\r\n                                    <NavDropdown.Item onClick={Logouthandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown> :\r\n                                    <Nav.Link href=\"/login\">\r\n                                        <i class=\"fas fa-user\"></i>\r\n                                    Login</Nav.Link>}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\UserProfile.js",["187"],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\PlaceOrderScreen.js",["188"],"import React, { useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getlogindata } from '../Action/Login'\r\nimport { OrderAction } from '../Action/Order'\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state) => state.cart)\r\n    const details = useSelector((state) => state.Orderdetails)\r\n    const { sucess } = details\r\n    const { orderdetail } = details\r\n    const { shippingAddress, PaymentMethod } = cart\r\n    useEffect(() => {\r\n        dispatch(getlogindata())\r\n        if (sucess) {\r\n            history.push(`/order/${orderdetail._id}`)\r\n        }\r\n    }, [dispatch, history, sucess])\r\n    const total_quantity = cart.cartItems.reduce((acc, element) => {\r\n        return acc + element.qyt\r\n    }, 0)\r\n    const total_price = cart.cartItems.reduce((acc, element) => {\r\n        return acc + element.qyt * element.price\r\n    }, 0)\r\n    const shipping = 3\r\n    const order = {\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: shippingAddress,\r\n        paymentMethod: PaymentMethod,\r\n        shippingPrice: shipping,\r\n        totalPrice: total_price\r\n    }\r\n    const Placeorderhandler = () => {\r\n        console.log(order)\r\n        dispatch(OrderAction(order))\r\n    }\r\n    return (\r\n        <div><br />\r\n            <h1>Place Order</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h5>shipping</h5>\r\n                            <p>Address:{shippingAddress.address},{shippingAddress.city} {shippingAddress.postalCode},{shippingAddress.country}</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Payment Method</h5>\r\n                            <p>Method:{PaymentMethod}</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Order items</h5>\r\n                            {cart.cartItems === 0 ? <h6>Cart is Empty</h6> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} fluid rounded />\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    {item.name}\r\n                                                </Col>\r\n                                                <Col md={1}>\r\n                                                    {item.qyt}x{item.price}={item.qyt * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h3>order summary</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>{total_quantity}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${shipping}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price</Col>\r\n                                    <Col>${total_price + shipping}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='Button' disabled={cart.cartItems.length === 0} className='btn-block' onClick={Placeorderhandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n",["189","190"],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\PaymentScreen.js",[],["191","192"],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Loginscreen.js",["193"],"import React, { useState, useEffect } from 'react'\r\nimport { login } from '../Action/Login'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nconst Loginscreen = () => {\r\n    const dispatch = useDispatch()\r\n    const userInfo = useSelector(state => state.user)\r\n    const { user, token } = userInfo\r\n    const [userdata, setUserdata] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const { email, password } = userdata\r\n    const onchange = (e) => {\r\n        setUserdata({ ...userdata, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    if (user && token !== null) {\r\n        return <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"SignUp-Container1\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"SignUp-Container2\">\r\n                            <h2 className=\"SignUp-Heading\">Here you can Log In</h2>\r\n                            <p className=\"SignUp-para\">Enter in your account</p>\r\n                            <label for=\"email\" class=\"Global-label\">Email</label>\r\n                            <input type=\"email\" placeholder=\"Enter EmailId\" className=\"Global-Input\" name=\"email\" required value={email} onChange={onchange} />\r\n                            <label for=\"password\" class=\"Global-label\">Password</label>\r\n                            <input type=\"password\" placeholder=\"Enter Password\" className=\"Global-Input\" name=\"password\" required value={password} onChange={onchange} minLength=\"6\" />\r\n                            <button className=\"SignUp-btn\" type=\"submit\">Log In</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loginscreen",["194","195"],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\ShippingScreen.js",[],["196","197"],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Registerscreen.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Login.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Product.js",["198"],"E:\\REACT COURSE\\ecommerce\\client\\src\\types.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Store.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Login.js",[],["199","200"],"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Order.js",[],["201","202"],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Order.js",[],["203","204"],"E:\\REACT COURSE\\ecommerce\\client\\src\\App.js",["205"],"import React from 'react'\r\nimport Header from './componets/Header'\r\nimport Footer from './componets/Footer'\r\nimport Homescreen from './screen/Homescreen'\r\nimport { Container } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Productscreen from './screen/Productscreen'\r\nimport Cartscreen from './screen/Cartscreen'\r\nimport Loginscreen from './screen/Loginscreen'\r\nimport { setToken } from './setToken'\r\nimport Registerscreen from './screen/Registerscreen'\r\nimport UserProfile from './screen/UserProfile'\r\nimport ShippingScreen from './screen/ShippingScreen'\r\nimport PaymentScreen from './screen/PaymentScreen'\r\nimport PlaceOrderScreen from './screen/PlaceOrderScreen'\r\nimport Orderscreen from './screen/Orderscreen'\r\nimport Adminlogin from './screen/Adminlogin'\r\nimport UploadProduct from './screen/UploadProduct'\r\n\r\nconst App = () => {\r\n    if (localStorage.token) {\r\n        setToken(localStorage.token)\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header />\r\n                <Container>\r\n                    <Route path=\"/\" exact component={Homescreen} />\r\n                    <Route path=\"/product/:id\" exact component={Productscreen} />\r\n                    <Route path=\"/order/:id\" exact component={Orderscreen} />\r\n                    <Route path=\"/cart/:id?\" exact component={Cartscreen} />\r\n                    <Route path=\"/login\" exact component={Loginscreen} />\r\n                    <Route path=\"/register\" exact component={Registerscreen} />\r\n                    <Route path=\"/UserProfile\" exact component={UserProfile} />\r\n                    <Route path=\"/shipping\" exact component={ShippingScreen} />\r\n                    <Route path=\"/payment\" exact component={PaymentScreen} />\r\n                    <Route path=\"/placeorder\" exact component={PlaceOrderScreen} />\r\n                    <Route path=\"/admin\" exact component={Adminlogin} />\r\n                    <Route path=\"/uploadProduct\" exact component={UploadProduct} />\r\n                </Container>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Cartscreen.js",["206","207","208","209"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Addtocart, removecart } from '../Action/Cart'\r\nimport Message from '../componets/Message'\r\nimport { Col, Row, ListGroup, Image, Button, Form, Card } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getlogindata } from '../Action/Login'\r\nconst Cartscreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qyt = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state) => state.cart)\r\n    const userInfo = useSelector((state) => state.user)\r\n    const { user, token } = userInfo\r\n    const { cartItems } = cart\r\n    useEffect(() => {\r\n        dispatch(getlogindata())\r\n        if (productId) {\r\n            dispatch(Addtocart(productId, qyt))\r\n        }\r\n    }, [dispatch])\r\n    const total_quantity = cartItems.reduce((acc, element) => {\r\n        return acc + element.qyt\r\n    }, 0)\r\n    const total_price = cartItems.reduce((acc, element) => {\r\n        return acc + element.qyt * element.price\r\n    }, 0)\r\n    const Checkouthandler = () => {\r\n        console.log()\r\n        if (user && token) {\r\n            history.push('/shipping')\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const removefromcart = (id) => {\r\n        dispatch(removecart(id))\r\n    }\r\n    return (\r\n        <div><br />\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? <Message>Your Cart is Empty</Message> : <Fragment>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant=\"flush\">\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={2} style={{ marginTop: '10px' }}>\r\n                                            <p>${item.price}</p>\r\n                                        </Col>\r\n                                        <Col md={4} style={{ marginTop: '10px' }}>\r\n                                            <p>{item.name}</p>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            {item.countInStock > 0 ?\r\n                                                <div>\r\n                                                    <Form.Control as=\"select\" custom value={item.qyt} onChange={(e) => dispatch(Addtocart(item.product, Number(e.target.value)))}>\r\n                                                        {[...Array(item.countInStock).keys()].map(\r\n                                                            (x) => (\r\n                                                                <option key={x + 1} value={x + 1}>\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            )\r\n                                                        )}\r\n                                                    </Form.Control>\r\n                                                </div>\r\n                                                : 'fghj'}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button onClick={() => removefromcart(item.product)}>Delete</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                Subtotal({total_quantity})Items\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Total Price:${total_price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='Button' disabled={cartItems.length === 0} onClick={Checkouthandler} className='btn-block'>CheckOut</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartscreen\r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Productscreen.js",["210"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Image, Col, ListGroup, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../componets/Rating'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ProductDetails } from '../Action/Product'\r\nimport { getlogindata } from '../Action/Login'\r\nconst Productscreen = ({ history, match }) => {\r\n    const [qyt, setQyt] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productlist = useSelector(state => state.Productlist)\r\n    const { ProductDetail } = productlist\r\n    useEffect(() => {\r\n        dispatch(ProductDetails(match.params.id))\r\n        dispatch(getlogindata())\r\n    }, [dispatch])\r\n    const addtocart = () => {\r\n        history.push(`/cart/${match.params.id}?qyt=${qyt}`)\r\n    }\r\n    return (\r\n        <div>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={ProductDetail.image} fluid />\r\n                </Col>\r\n                <Col md={6} style={{ padding: '10px' }}>\r\n                    <h4 style={{ marginLeft: '20px' }}>{ProductDetail.name}</h4>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <Rating value={ProductDetail.rating} text={`${ProductDetail.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Price:${ProductDetail.price}</h5>\r\n                            <p>{ProductDetail.countInStock >= 0 ? 'In Stock' : 'Out of Stock'}</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <p>Description:{ProductDetail.description}</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                {ProductDetail.countInStock > 0 ?\r\n                                    <div>\r\n                                        <Form.Control as=\"select\" custom value={qyt} onChange={(e) => setQyt(e.target.value)}>\r\n                                            {[...Array(ProductDetail.countInStock).keys()].map(\r\n                                                (x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                )\r\n                                            )}\r\n                                        </Form.Control>\r\n                                    </div>\r\n                                    : 'fghj'}\r\n                                <div>\r\n                                    <h4 style={{ marginRight: '10px', marginLeft: '10px', backgroundColor: '#f7f7f9', paddingBottom: '10px', paddingTop: '10px' }}>Price:$100</h4>\r\n                                </div>\r\n                                <div><Button onClick={addtocart} style={{ marginLeft: '10px' }}>Add to cart</Button></div>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\nexport default Productscreen \r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Product.js",["211"],"import { Productlist_sucess, Productlist_fails, ProductDetail_fail, ProductDetail_sucess } from '../types'\r\nconst initialstate = {\r\n    loading: true,\r\n    products: [],\r\n    ProductDetail: {},\r\n    error: null\r\n}\r\nexport const ProductReducer = (state = initialstate, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case Productlist_sucess:\r\n            return {\r\n                loading: false,\r\n                products: payload,\r\n                error: null\r\n            }\r\n        case Productlist_fails:\r\n            return {\r\n                loading: true,\r\n                products: [],\r\n                error: payload\r\n            }\r\n        case ProductDetail_sucess:\r\n            return {\r\n                ...state,\r\n                ProductDetail:payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Product.js",[],["212","213"],"E:\\REACT COURSE\\ecommerce\\client\\src\\setToken.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Footer.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Register.js",[],["214","215"],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\FormContainer.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Homescreen.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\Orderdetail.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Cart.js",["216"],"import { Addcart_sucess, Addcart_fail, Remove_cart, Shipping_Add_Sucess, Save_PaymentMethod } from '../types'\r\nimport axios from 'axios'\r\nexport const Addtocart = (id, qyt) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/product/${id}`)\r\n    dispatch({\r\n        type: Addcart_sucess,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qyt\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const removecart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: Remove_cart,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n//shipping\r\nexport const shipping = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: Shipping_Add_Sucess,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('Shipping_Address', JSON.stringify(data))\r\n}\r\n//payment method\r\nexport const Payment = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: Save_PaymentMethod,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('PaymentMethod', JSON.stringify(data))\r\n}\r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Orderscreen.js",["217","218","219","220"],"import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getlogindata } from '../Action/Login'\r\nimport { ODAfter } from '../Action/Orderdetails'\r\nimport { OrderPayAction } from '../Action/OrderPay'\r\nimport axios from 'axios'\r\nconst PlaceOrderScreen = ({ history, match }) => {\r\n    const [sdkready, setSdkready] = useState(false)\r\n    const placedetails = useSelector((state) => state.ODAfterPlace)\r\n    const paydetails = useSelector((state) => state.OrderPay)\r\n    const { fulldetails } = placedetails\r\n    const { sucess, Paydetails } = paydetails\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getlogindata())\r\n        const addpaypalscript = async () => {\r\n            try {\r\n                const { data } = await axios.get('/api/config/paypal')\r\n                const script = document.createElement('script')\r\n                script.type = \"text/javascript\"\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${data}`\r\n                script.async = true\r\n                script.onload = () => {\r\n                    setSdkready(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (!fulldetails || sucess) {\r\n            dispatch(ODAfter(match.params.id))\r\n            addpaypalscript()\r\n        }\r\n        if (sucess) {\r\n            dispatch(ODAfter(match.params.id))\r\n        }\r\n    }, [dispatch, match, ODAfter, sucess,])\r\n    const onsucesspayment = (paymentResult) => {\r\n        dispatch(OrderPayAction(match.params.id, paymentResult))\r\n        dispatch(ODAfter(match.params.id))\r\n        console.log(paymentResult)\r\n    }\r\n    return (\r\n        <div>\r\n            {fulldetails ? <div><br />\r\n                <h1>Order ID:{fulldetails._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h5>shipping</h5>\r\n                                <p>Address:{fulldetails.shippingAddress.address}{fulldetails.shippingAddress.city} {fulldetails.shippingAddress.postalCode},{fulldetails.shippingAddress.country}</p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h5>Payment Method</h5>\r\n                                <p>Method:{fulldetails.paymentMethod}</p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {fulldetails.isPaid ? <div>Payment status:<h1 style={{ color: 'green' }}>PAID</h1><p>{fulldetails.paidAt}</p></div> : <div>Payment status:<h3 style={{ color: \"red\" }}>Not Paid</h3> </div>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {fulldetails.isDelivered ? <div>Delivery status<h1 style={{ color: 'green' }}>Delivered Sucessfully</h1></div> : <div>Delivery status :<h3 style={{ color: \"red\" }}>Not Delivered</h3> </div>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h5>Order items</h5>\r\n                                {fulldetails.orderItems === 0 ? <h6>Cart is Empty</h6> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {fulldetails.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image src={item.image} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        {item.name}\r\n                                                    </Col>\r\n                                                    <Col md={1}>\r\n                                                        ${item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>order summary</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total Payment</Col>\r\n                                        <Col>${fulldetails.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {!fulldetails.isPaid ? <div>\r\n                                        <PayPalButton amount={fulldetails.totalPrice} onSuccess={onsucesspayment} />\r\n                                    </div> : ''}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\OrderPay.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\OrderPay.js",[],["221","222"],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\Orderdetails.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Message.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Rating.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Reducer\\OrderList.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\Action\\OrderList.js",["223"],"E:\\REACT COURSE\\ecommerce\\client\\src\\componets\\Loader.js",[],"E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\Adminlogin.js",["224","225","226"],"import React, { useState, useEffect } from 'react'\r\nimport { login } from '../Action/Login'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nconst Adminlogin = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const userInfo = useSelector(state => state.user)\r\n    const { user, token } = userInfo\r\n    const [userdata, setUserdata] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const { email, password } = userdata\r\n    const onchange = (e) => {\r\n        setUserdata({ ...userdata, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    if (user) {\r\n        if (user.isAdmin) {\r\n            history.push('/uploadProduct')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"SignUp-Container1\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"SignUp-Container2\">\r\n                            <h2 className=\"SignUp-Heading\">Here you can Log In</h2>\r\n                            <p className=\"SignUp-para\">Enter in your account</p>\r\n                            <label for=\"email\" class=\"Global-label\">Email</label>\r\n                            <input type=\"email\" placeholder=\"Enter EmailId\" className=\"Global-Input\" name=\"email\" required value={email} onChange={onchange} />\r\n                            <label for=\"password\" class=\"Global-label\">Password</label>\r\n                            <input type=\"password\" placeholder=\"Enter Password\" className=\"Global-Input\" name=\"password\" required value={password} onChange={onchange} minLength=\"6\" />\r\n                            <button className=\"SignUp-btn\" type=\"submit\">Log In</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Adminlogin","E:\\REACT COURSE\\ecommerce\\client\\src\\screen\\UploadProduct.js",[],{"ruleId":"227","severity":1,"message":"228","line":1,"column":10,"nodeType":"229","messageId":"230","endLine":1,"endColumn":22},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"227","severity":1,"message":"237","line":2,"column":47,"nodeType":"229","messageId":"230","endLine":2,"endColumn":59},{"ruleId":"238","severity":1,"message":"239","line":25,"column":8,"nodeType":"240","endLine":25,"endColumn":10,"suggestions":"241"},{"ruleId":"238","severity":1,"message":"242","line":18,"column":8,"nodeType":"240","endLine":18,"endColumn":35,"suggestions":"243"},{"ruleId":"231","replacedBy":"244"},{"ruleId":"233","replacedBy":"245"},{"ruleId":"231","replacedBy":"246"},{"ruleId":"233","replacedBy":"247"},{"ruleId":"227","severity":1,"message":"248","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"231","replacedBy":"249"},{"ruleId":"233","replacedBy":"250"},{"ruleId":"231","replacedBy":"251"},{"ruleId":"233","replacedBy":"252"},{"ruleId":"227","severity":1,"message":"253","line":2,"column":16,"nodeType":"229","messageId":"230","endLine":2,"endColumn":22},{"ruleId":"231","replacedBy":"254"},{"ruleId":"233","replacedBy":"255"},{"ruleId":"231","replacedBy":"256"},{"ruleId":"233","replacedBy":"257"},{"ruleId":"231","replacedBy":"258"},{"ruleId":"233","replacedBy":"259"},{"ruleId":"227","severity":1,"message":"260","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":14},{"ruleId":"227","severity":1,"message":"261","line":1,"column":38,"nodeType":"229","messageId":"230","endLine":1,"endColumn":46},{"ruleId":"227","severity":1,"message":"262","line":5,"column":52,"nodeType":"229","messageId":"230","endLine":5,"endColumn":56},{"ruleId":"227","severity":1,"message":"263","line":6,"column":10,"nodeType":"229","messageId":"230","endLine":6,"endColumn":18},{"ruleId":"238","severity":1,"message":"264","line":21,"column":8,"nodeType":"240","endLine":21,"endColumn":18,"suggestions":"265"},{"ruleId":"238","severity":1,"message":"266","line":16,"column":8,"nodeType":"240","endLine":16,"endColumn":18,"suggestions":"267"},{"ruleId":"227","severity":1,"message":"268","line":1,"column":49,"nodeType":"229","messageId":"230","endLine":1,"endColumn":67},{"ruleId":"231","replacedBy":"269"},{"ruleId":"233","replacedBy":"270"},{"ruleId":"231","replacedBy":"271"},{"ruleId":"233","replacedBy":"272"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":26,"nodeType":"229","messageId":"230","endLine":1,"endColumn":38},{"ruleId":"227","severity":1,"message":"253","line":2,"column":44,"nodeType":"229","messageId":"230","endLine":2,"endColumn":50},{"ruleId":"227","severity":1,"message":"273","line":10,"column":12,"nodeType":"229","messageId":"230","endLine":10,"endColumn":20},{"ruleId":"227","severity":1,"message":"274","line":14,"column":21,"nodeType":"229","messageId":"230","endLine":14,"endColumn":31},{"ruleId":"238","severity":1,"message":"275","line":40,"column":8,"nodeType":"240","endLine":40,"endColumn":43,"suggestions":"276"},{"ruleId":"231","replacedBy":"277"},{"ruleId":"233","replacedBy":"278"},{"ruleId":"227","severity":1,"message":"279","line":1,"column":28,"nodeType":"229","messageId":"230","endLine":1,"endColumn":42},{"ruleId":"227","severity":1,"message":"248","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"263","line":4,"column":10,"nodeType":"229","messageId":"230","endLine":4,"endColumn":18},{"ruleId":"227","severity":1,"message":"280","line":8,"column":19,"nodeType":"229","messageId":"230","endLine":8,"endColumn":24},"no-unused-vars","'Addcart_fail' is defined but never used.","Identifier","unusedVar","no-native-reassign",["281"],"no-negated-in-lhs",["282"],["281"],["282"],"'DropdownItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["283"],"React Hook useEffect has a missing dependency: 'orderdetail._id'. Either include it or remove the dependency array.",["284"],["281"],["282"],["281"],["282"],"'useEffect' is defined but never used.",["281"],["282"],["281"],["282"],"'Button' is defined but never used.",["281"],["282"],["281"],["282"],["281"],["282"],"'Footer' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'productId' and 'qyt'. Either include them or remove the dependency array.",["285"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["286"],"'ProductDetail_fail' is defined but never used.",["281"],["282"],["281"],["282"],"'sdkready' is assigned a value but never used.","'Paydetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fulldetails'. Either include it or remove the dependency array. Outer scope values like 'ODAfter' aren't valid dependencies because mutating them doesn't re-render the component.",["287"],["281"],["282"],"'OrderList_fail' is defined but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [dispatch]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch, history, orderdetail._id, sucess]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch, productId, qyt]",{"range":"302","text":"303"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"304","text":"305"},"Update the dependencies array to be: [dispatch, match, sucess, fulldetails]",{"range":"306","text":"307"},[911,913],"[dispatch]",[742,769],"[dispatch, history, orderdetail._id, sucess]",[931,941],"[dispatch, productId, qyt]",[714,724],"[dispatch, match.params.id]",[1666,1701],"[dispatch, match, sucess, fulldetails]"]